diff --git a/node_modules/react-native-reanimated/react-native-reanimated.d.ts b/node_modules/react-native-reanimated/react-native-reanimated.d.ts
index a177135..7435250 100644
--- a/node_modules/react-native-reanimated/react-native-reanimated.d.ts
+++ b/node_modules/react-native-reanimated/react-native-reanimated.d.ts
@@ -242,11 +242,11 @@ declare module 'react-native-reanimated' {
     export function concat(
       ...args: Array<Adaptable<string> | Adaptable<number>>,
     ): AnimatedNode<string>;
-    export function cond<T extends Value = number>(
+    export function cond<T1 extends Value = number, T2 extends Value = number>(
       conditionNode: Adaptable<number>,
-      ifNode: Adaptable<T>,
-      elseNode?: Adaptable<T>,
-    ): AnimatedNode<T>;
+      ifNode: Adaptable<T1>,
+      elseNode?: Adaptable<T2>,
+    ): AnimatedNode<T1 | T2>;
     export function block<T>(
       items: ReadonlyArray<Adaptable<T>>,
     ): AnimatedNode<T>;
@@ -394,4 +394,125 @@ declare module 'react-native-reanimated' {
     static Sequence: ComponentClass<{}>;
   }
 
+  const {
+    Clock,
+    Value,
+    Node,
+    add,
+    sub,
+    multiply,
+    divide,
+    pow,
+    modulo,
+    sqrt,
+    log,
+    sin,
+    cos,
+    exp,
+    round,
+    lessThan,
+    eq,
+    greaterThan,
+    lessOrEq,
+    greaterOrEq,
+    neq,
+    and,
+    or,
+    defined,
+    not,
+    tan,
+    acos,
+    asin,
+    atan,
+    proc,
+    block,
+    concat,
+    event,
+    call,
+    debug,
+    clockRunning,
+    stopClock,
+    startClock,
+    set,
+    cond,
+    abs,
+    acc,
+    color,
+    diff,
+    diffClamp,
+    interpolate,
+    Extrapolate,
+    max,
+    min,
+    onChange,
+    floor,
+    ceil,
+    useCode,
+
+    decay,
+    timing,
+    spring,
+    SpringUtils
+  } = Animated;
+
+  export {
+    Clock,
+    Value,
+    Node,
+    add,
+    sub,
+    multiply,
+    divide,
+    pow,
+    modulo,
+    sqrt,
+    log,
+    sin,
+    cos,
+    exp,
+    round,
+    lessThan,
+    eq,
+    greaterThan,
+    lessOrEq,
+    greaterOrEq,
+    neq,
+    and,
+    or,
+    defined,
+    not,
+    tan,
+    acos,
+    asin,
+    atan,
+    proc,
+    block,
+    concat,
+    event,
+    call,
+    debug,
+    clockRunning,
+    stopClock,
+    startClock,
+    set,
+    cond,
+    abs,
+    acc,
+    color,
+    diff,
+    diffClamp,
+    interpolate,
+    Extrapolate,
+    max,
+    min,
+    onChange,
+    floor,
+    ceil,
+    useCode,
+
+    decay,
+    timing,
+    spring,
+    SpringUtils
+  };
 }
diff --git a/node_modules/react-native-reanimated/src/Animated.js b/node_modules/react-native-reanimated/src/Animated.js
index d8cea3b..e76d42f 100644
--- a/node_modules/react-native-reanimated/src/Animated.js
+++ b/node_modules/react-native-reanimated/src/Animated.js
@@ -25,6 +25,10 @@ import {
 } from './Transitioning';
 import SpringUtils from './animations/SpringUtils';
 
+
+const decayWrapper = backwardCompatibleAnimWrapper(decay, DecayAnimation);
+const timingWrapper = backwardCompatibleAnimWrapper(timing, TimingAnimation);
+const springWrapper = backwardCompatibleAnimWrapper(spring, SpringAnimation);
 const Animated = {
   // components
   View: createAnimatedComponent(View),
@@ -44,9 +48,9 @@ const Animated = {
   ...derived,
 
   // animations
-  decay: backwardCompatibleAnimWrapper(decay, DecayAnimation),
-  timing: backwardCompatibleAnimWrapper(timing, TimingAnimation),
-  spring: backwardCompatibleAnimWrapper(spring, SpringAnimation),
+  decay: decayWrapper,
+  timing: timingWrapper,
+  spring: springWrapper,
   SpringUtils,
 
   // configuration
@@ -56,4 +60,24 @@ const Animated = {
 
 export default Animated;
 
-export { Easing, Transitioning, Transition, createTransitioningComponent };
+// operations
+export * from './base';
+export * from './derived';
+
+export {
+  Easing,
+  Transitioning,
+  Transition,
+  createTransitioningComponent, 
+
+  // classes
+  AnimatedClock as Clock,
+  AnimatedValue as Value,
+  AnimatedNode as Node,
+
+  // animations
+  decayWrapper as decay,
+  timingWrapper as timing,
+  springWrapper as spring,
+  SpringUtils,
+};
\ No newline at end of file
